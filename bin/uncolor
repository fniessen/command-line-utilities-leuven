#!/usr/bin/env bash

#? uncolor, Time-stamp: <2025-08-07 Thu 13:40>
#? Copyright (C) 2020-2025 Fabrice Niessen. All rights reserved.
#?
#? License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
#? This is free software: you are free to change and redistribute it.
#? There is NO WARRANTY, to the extent permitted by law.

##? Usage: uncolor [options] [FILE]
##?
##? Strip color sequences from the input text.
##?
##? Arguments:
##?   FILE                          file
##?
##? Options:
##?   -h, --help                    display this help and exit
##?   -V, --version                 display version information and exit

# NOTE:
# This script removes ANSI color and control sequences from input. For more
# advanced handling (e.g. better Unicode/terminal sequence support), consider
# using the external tool 'ansi2text' from the 'aha' or 'ansi2txt' packages.

# Set -uo pipefail for undefined variable check and pipeline failure propagation.
set -uo pipefail

# Check if 'docopts' command is available.
if ! command -v docopts > /dev/null 2>&1; then
    printf >&2 "Error: 'docopts' command not found.\n"
    exit 2
fi

# Extract help and version information from the script.
help=$(grep -E '^##\?' "$0" | cut -c 5-)
version=$(grep -E '^#\?' "$0" | cut -c 4-)

# Parse command-line arguments using docopts.
eval "$(docopts -h "$help" -V "$version" : "$@")" || exit $?

# Silence AI false positives: FILE is set dynamically by docopts.
FILE="${FILE:-}"

# Set -e to exit on non-zero command status.
set -e

if [[ -n "${FILE}" ]]; then
    if [[ ! -f "$FILE" || ! -r "$FILE" ]]; then
        printf >&2 "Error: File '%s' does not exist, is not readable, or is not a regular file.\n" "$FILE"
        exit 2
    fi
    sed -E $'s/\033\\[[0-9;?<>=]*[a-zA-Z]//g' "$FILE"
else
    sed -E $'s/\033\\[[0-9;?<>=]*[a-zA-Z]//g'
fi
