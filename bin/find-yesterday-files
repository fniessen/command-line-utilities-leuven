#!/usr/bin/env bash

#? find-yesterday-files, Time-stamp: <2023-07-31 Mon 11:17>
#? Copyright (C) 2023 Fabrice Niessen. All rights reserved.
#?
#? License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
#? This is free software: you are free to change and redistribute it.
#? There is NO WARRANTY, to the extent permitted by law.

##? Usage: find-yesterday-files [options] [DIRECTORY]
##?
##? Find all files modified yesterday in a specified directory, filtered by extension.
##?
##? Arguments:
##?   DIRECTORY                     starting directory
##?
##? Options:
##?   -e, --extension=EXTENSION     filter files by extension
##?   -h, --help                    display this help and exit
##?   -V, --version                 display version information and exit

set -euo pipefail

# Check if docopts command is available.
if ! command -v docopts > /dev/null 2>&1; then
    printf >&2 'Error: docopts command not found.\n'
    exit 2
fi

# Extract help and version information from the script.
help=$(grep "^##?" "$0" | cut -c 5-)
version=$(grep "^#?" "$0" | cut -c 4-)

# Get command-line arguments.
args="$(docopts -h "$help" -V "$version" : "$@")"
eval "$args"

DIRECTORY=${DIRECTORY:=.}

# If EXTENSION is not provided, set it to an empty string.
EXTENSION=${EXTENSION:-}

# List all files modified YESTERDAY only (between the start of yesterday and the
# end of yesterday).
if [ -n "$EXTENSION" ]; then
    find "$DIRECTORY" -type f  -name "*.$EXTENSION" -newermt "yesterday 00:00" ! -newermt "today 00:00" -printf "  %CY-%Cm-%Cd %Ca %CH:%CM - %P\n"
else
    find "$DIRECTORY" -type f -newermt "yesterday 00:00" ! -newermt "today 00:00" -printf "  %CY-%Cm-%Cd %Ca %CH:%CM - %P\n"
fi
