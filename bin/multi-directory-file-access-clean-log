#!/usr/bin/env bash

#? file-access-clean-log, Time-stamp: <2024-02-06 Tue 10:55>
#? Copyright (C) 2023-2024 Fabrice Niessen. All rights reserved.
#?
#? License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
#? This is free software: you are free to change and redistribute it.
#? There is NO WARRANTY, to the extent permitted by law.

##? Usage: file-access-clean-log [options] [LOG_FILE]
##?
##? Clean and filter a file access log.
##?
##? Arguments:
##?   LOG_FILE                      Path to the log file to be cleaned.
##?
##? Options:
##?   -h, --help                    Display this help and exit.
##?   -V, --version                 Show version.

# Set -uo pipefail for undefined variable check and pipeline failure propagation.
set -uo pipefail

# Check if docopts command is available.
if ! command -v docopts > /dev/null 2>&1; then
    printf >&2 'Error: docopts command not found.\n'
    exit 2
fi

# Extract help and version information from the script.
help=$(grep "^##?" "$0" | cut -c 5-)
version=$(grep "^#?" "$0" | cut -c 4-)

# Get command-line arguments.
args="$(docopts -h "$help" -V "$version" : "$@")"
eval "$args"

# Set -e to exit on non-zero command status.
set -e

# Set a default log file if no argument is provided.
LOG_FILE="${LOG_FILE:-file_access_log.txt}"

# Create a temporary file for processing.
temp_file="${LOG_FILE}.tmp"

# Copy the log file to the temporary file.
cp "$LOG_FILE" "$temp_file"

# Remove lines containing '.git/' from the temporary file.
grep -v '.git/' "$temp_file" > "$temp_file.tmp"
mv "$temp_file.tmp" "$temp_file"

# Remove lines containing 'ACCESS,ISDIR' from the temporary file.
grep -v 'ACCESS,ISDIR' "$temp_file" > "$temp_file.tmp"
mv "$temp_file.tmp" "$temp_file"

# Deduplicate and clean the temporary file.
sort -u -o "$temp_file" "$temp_file.tmp"
mv "$temp_file.tmp" "$temp_file"

# Remove "ACCESS" from paths in the temporary file.
sed 's/\([^ ]*\) ACCESS \([^ ]*\)/\1\2/g' "$temp_file" > "$temp_file.tmp"
mv "$temp_file.tmp" "$temp_file"

# Remove the './' prefix from lines in the temporary file.
sed 's#^\./##' "$temp_file" > "$temp_file.tmp"
mv "$temp_file.tmp" "$temp_file"

# Display the temporary file contents.
cat "$temp_file"

# Clean up the temporary file.
rm -f "$temp_file"
