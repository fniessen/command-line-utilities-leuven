#!/usr/bin/env bash

e () {
    echo -e "$@"
}

e
# Color names from Debian's colortest
e "BLK (30): \033[00;30mThis is it.\033[01;30m And bold.\033[00m"
e "RED (31): \033[00;31mThis is it.\033[01;31m And bold.\033[00m"
e "GRN (32): \033[00;32mThis is it.\033[01;32m And bold.\033[00m"
e "YEL (33): \033[00;33mThis is it.\033[01;33m And bold.\033[00m"
e "BLU (34): \033[00;34mThis is it.\033[01;34m And bold.\033[00m"
e "MAG (35): \033[00;35mThis is it.\033[01;35m And bold.\033[00m"
e "CYN (36): \033[00;36mThis is it.\033[01;36m And bold.\033[00m"
e "WHT (37): \033[00;37mThis is it.\033[01;37m And bold.\033[00m"
e
e
e "Background\033[00;30m(Colour Example)\033[00m(Norm: Black )"
e "Foreground\033[00;37m(Colour Example)\033[00m(Norm: White )"
e "Ref-Prepro\033[00;35m(Colour Example)\033[00m(Norm:Magenta)"
e "Type Mod. \033[00;32m(Colour Example)\033[00m(Norm: Green )"
e "Keyword   \033[00;33m(Colour Example)\033[00m(Norm: Yellow)"
e "Const/Str \033[00;31m(Colour Example)\033[00m(Norm: Red   )"
e "Comment   \033[00;34m(Colour Example)\033[00m(Norm: Blue  )"

e

# Reset
Color_Off='\e[0m'       # Text Reset

# Regular Colors
Black='\e[0;30m'        # Black
Red='\e[0;31m'          # Red
Green='\e[0;32m'        # Green
Yellow='\e[0;33m'       # Yellow
Blue='\e[0;34m'         # Blue
Purple='\e[0;35m'       # Purple
Cyan='\e[0;36m'         # Cyan
White='\e[0;37m'        # White

# Bold
BBlack='\e[1;30m'       # Black
BRed='\e[1;31m'         # Red
BGreen='\e[1;32m'       # Green
BYellow='\e[1;33m'      # Yellow
BBlue='\e[1;34m'        # Blue
BPurple='\e[1;35m'      # Purple
BCyan='\e[1;36m'        # Cyan
BWhite='\e[1;37m'       # White

# Underline
UBlack='\e[4;30m'       # Black
URed='\e[4;31m'         # Red
UGreen='\e[4;32m'       # Green
UYellow='\e[4;33m'      # Yellow
UBlue='\e[4;34m'        # Blue
UPurple='\e[4;35m'      # Purple
UCyan='\e[4;36m'        # Cyan
UWhite='\e[4;37m'       # White

# Background
On_Black='\e[40m'       # Black
On_Red='\e[41m'         # Red
On_Green='\e[42m'       # Green
On_Yellow='\e[43m'      # Yellow
On_Blue='\e[44m'        # Blue
On_Purple='\e[45m'      # Purple
On_Cyan='\e[46m'        # Cyan
On_White='\e[47m'       # White

# High Intensity
IBlack='\e[0;90m'       # Black
IRed='\e[0;91m'         # Red
IGreen='\e[0;92m'       # Green
IYellow='\e[0;93m'      # Yellow
IBlue='\e[0;94m'        # Blue
IPurple='\e[0;95m'      # Purple
ICyan='\e[0;96m'        # Cyan
IWhite='\e[0;97m'       # White

# Bold High Intensity
BIBlack='\e[1;90m'      # Black
BIRed='\e[1;91m'        # Red
BIGreen='\e[1;92m'      # Green
BIYellow='\e[1;93m'     # Yellow
BIBlue='\e[1;94m'       # Blue
BIPurple='\e[1;95m'     # Purple
BICyan='\e[1;96m'       # Cyan
BIWhite='\e[1;97m'      # White

# High Intensty backgrounds
On_IBlack='\e[0;100m'   # Black
On_IRed='\e[0;101m'     # Red
On_IGreen='\e[0;102m'   # Green
On_IYellow='\e[0;103m'  # Yellow
On_IBlue='\e[0;104m'    # Blue
On_IPurple='\e[10;95m'  # Purple
On_ICyan='\e[0;106m'    # Cyan
On_IWhite='\e[0;107m'   # White

echo -e "${Red}test regular color${Color_Off}"
echo -e "${BRed}test bold${Color_Off}"
echo -e "${URed}test underline${Color_Off}"
echo -e "${On_Red}test background${Color_Off}"
echo -e "${IRed}test high intensity${Color_Off}"
echo -e "${BIRed}test bold high intensity${Color_Off}"
echo -e "${On_IRed}test high intensity background${Color_Off}"
echo ""
echo -e "${Yellow}test regular color${Color_Off}"
echo -e "${BYellow}test bold${Color_Off}"
echo -e "${UYellow}test underline${Color_Off}"
echo -e "${On_Yellow}test background${Color_Off}"
echo -e "${IYellow}test high intensity${Color_Off}"
echo -e "${BIYellow}test bold high intensity${Color_Off}"
echo -e "${On_IYellow}test high intensity background${Color_Off}"
echo ""
echo -e "${Green}test regular color${Color_Off}"
echo -e "${BGreen}test bold${Color_Off}"
echo -e "${UGreen}test underline${Color_Off}"
echo -e "${On_Green}test background${Color_Off}"
echo -e "${IGreen}test high intensity${Color_Off}"
echo -e "${BIGreen}test bold high intensity${Color_Off}"
echo -e "${On_IGreen}test high intensity background${Color_Off}"
echo ""
echo -e "${Blue}test regular color${Color_Off}"
echo -e "${BBlue}test bold${Color_Off}"
echo -e "${UBlue}test underline${Color_Off}"
echo -e "${On_Blue}test background${Color_Off}"
echo -e "${IBlue}test high intensity${Color_Off}"
echo -e "${BIBlue}test bold high intensity${Color_Off}"
echo -e "${On_IBlue}test high intensity background${Color_Off}"

# See the extended 256 colors.

e

color(){
    for c; do
        printf '\e[48;5;%dm%03d' $c $c
    done
    printf '\e[0m \n'
}

IFS=$' \t\n'
color {0..15}
for ((i=0;i<6;i++)); do
    color $(seq $((i*36+16)) $((i*36+51)))
done
color {232..255}

ansi-test()
{
    for a in 0 1 4 5 7; do
        echo "a=$a "
        for (( f=0; f<=9; f++ )) ; do
            for (( b=0; b<=9; b++ )) ; do
                #echo -ne "f=$f b=$b"
                echo -ne "\\033[${a};3${f};4${b}m"
                echo -ne "\\\\\\\\033[${a};3${f};4${b}m"
                echo -ne "\\033[0m "
            done
            echo
        done
        echo
    done
    echo
}

ansi-test

# XXX Make output more compact as in
# http://www.lihaoyi.com/post/BuildyourownCommandLinewithANSIescapecodes.html


256colors() {
    for i in {0..255}; do
        printf "\033[48;5;%dm\033[38;5;15m %03d " $i $i
        printf "\033[33;5;0m\033[38;5;%dm %03d " $i $i
        (( i+1 <= 16 ? (i+1) % 8 :  ((i+1)-16) % 6  )) || printf "\033[0m\n"
        (( i+1 <= 16 ? (i+1) % 16 : ((i+1)-16) % 36 )) || printf "\033[0m\n"
    done
}
256colors



for b in {0..7} 9; do
    for f in {0..7} 9; do
        for attr in "" bold; do
            echo -e -n "$(tput setab $b; tput setaf $f; [[ -n "$attr" ]] && tput $attr) $f ON $b $attr. $(tput sgr0)"
        done
        echo ""
    done
done
