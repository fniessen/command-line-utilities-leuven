#!/usr/bin/env bash

# Color Test and Formatting Demo Script

# Define a function for easier echo.
e() {
    echo -e "$@"
}

# Show some color examples using the colortest color names from Debian.
e "BLK (30): \033[00;30mThis is it.\033[01;30m And bold.\033[00m"
e "RED (31): \033[00;31mThis is it.\033[01;31m And bold.\033[00m"
e "GRN (32): \033[00;32mThis is it.\033[01;32m And bold.\033[00m"
e "YEL (33): \033[00;33mThis is it.\033[01;33m And bold.\033[00m"
e "BLU (34): \033[00;34mThis is it.\033[01;34m And bold.\033[00m"
e "MAG (35): \033[00;35mThis is it.\033[01;35m And bold.\033[00m"
e "CYN (36): \033[00;36mThis is it.\033[01;36m And bold.\033[00m"
e "WHT (37): \033[00;37mThis is it.\033[01;37m And bold.\033[00m"

e

# Show some color examples using more readable variable names.
e "Background\033[00;30m(Colour Example)\033[00m(Norm: Black )"
e "Foreground\033[00;37m(Colour Example)\033[00m(Norm: White )"
e "Ref-Prepro\033[00;35m(Colour Example)\033[00m(Norm:Magenta)"
e "Type Mod. \033[00;32m(Colour Example)\033[00m(Norm: Green )"
e "Keyword   \033[00;33m(Colour Example)\033[00m(Norm: Yellow)"
e "Const/Str \033[00;31m(Colour Example)\033[00m(Norm: Red   )"
e "Comment   \033[00;34m(Colour Example)\033[00m(Norm: Blue  )"

e

# Define some color variables.
reset_color='\e[0m'                     # Text Reset.

# Regular Colors.
black='\e[0;30m'                        # Black.
red='\e[0;31m'                          # Red.
green='\e[0;32m'                        # Green.
yellow='\e[0;33m'                       # Yellow.
blue='\e[0;34m'                         # Blue.
purple='\e[0;35m'                       # Purple.
cyan='\e[0;36m'                         # Cyan.
white='\e[0;37m'                        # White.

# Bold.
bold_black='\e[1;30m'                   # Black.
bold_red='\e[1;31m'                     # Red.
bold_green='\e[1;32m'                   # Green.
bold_yellow='\e[1;33m'                  # Yellow.
bold_blue='\e[1;34m'                    # Blue.
bold_purple='\e[1;35m'                  # Purple.
bold_cyan='\e[1;36m'                    # Cyan.
bold_white='\e[1;37m'                   # White.

# Underline.
underline_black='\e[4;30m'              # Black.
underline_red='\e[4;31m'                # Red.
underline_green='\e[4;32m'              # Green.
underline_yellow='\e[4;33m'             # Yellow.
underline_blue='\e[4;34m'               # Blue.
underline_purple='\e[4;35m'             # Purple.
underline_cyan='\e[4;36m'               # Cyan.
underline_white='\e[4;37m'              # White.

# Background
On_Black='\e[40m'       # Black
On_Red='\e[41m'         # Red
On_Green='\e[42m'       # Green
On_Yellow='\e[43m'      # Yellow
On_Blue='\e[44m'        # Blue
On_Purple='\e[45m'      # Purple
On_Cyan='\e[46m'        # Cyan
On_White='\e[47m'       # White

# High Intensity
IBlack='\e[0;90m'       # Black
IRed='\e[0;91m'         # Red
IGreen='\e[0;92m'       # Green
IYellow='\e[0;93m'      # Yellow
IBlue='\e[0;94m'        # Blue
IPurple='\e[0;95m'      # Purple
ICyan='\e[0;96m'        # Cyan
IWhite='\e[0;97m'       # White

# Bold High Intensity
BIBlack='\e[1;90m'      # Black
BIRed='\e[1;91m'        # Red
BIGreen='\e[1;92m'      # Green
BIYellow='\e[1;93m'     # Yellow
BIBlue='\e[1;94m'       # Blue
BIPurple='\e[1;95m'     # Purple
BICyan='\e[1;96m'       # Cyan
BIWhite='\e[1;97m'      # White

# High Intensty backgrounds
On_IBlack='\e[0;100m'   # Black
On_IRed='\e[0;101m'     # Red
On_IGreen='\e[0;102m'   # Green
On_IYellow='\e[0;103m'  # Yellow
On_IBlue='\e[0;104m'    # Blue
On_IPurple='\e[10;95m'  # Purple
On_ICyan='\e[0;106m'    # Cyan
On_IWhite='\e[0;107m'   # White

echo -e "${red}test regular color${reset_color}"
echo -e "${bold_red}test bold${reset_color}"
echo -e "${underline_red}test underline${reset_color}"
echo -e "${On_Red}test background${reset_color}"
echo -e "${IRed}test high intensity${reset_color}"
echo -e "${BIRed}test bold high intensity${reset_color}"
echo -e "${On_IRed}test high intensity background${reset_color}"
echo ""
echo -e "${yellow}test regular color${reset_color}"
echo -e "${bold_yellow}test bold${reset_color}"
echo -e "${underline_yellow}test underline${reset_color}"
echo -e "${On_Yellow}test background${reset_color}"
echo -e "${IYellow}test high intensity${reset_color}"
echo -e "${BIYellow}test bold high intensity${reset_color}"
echo -e "${On_IYellow}test high intensity background${reset_color}"
echo ""
echo -e "${green}test regular color${reset_color}"
echo -e "${bold_green}test bold${reset_color}"
echo -e "${underline_green}test underline${reset_color}"
echo -e "${On_Green}test background${reset_color}"
echo -e "${IGreen}test high intensity${reset_color}"
echo -e "${BIGreen}test bold high intensity${reset_color}"
echo -e "${On_IGreen}test high intensity background${reset_color}"
echo ""
echo -e "${blue}test regular color${reset_color}"
echo -e "${bold_blue}test bold${reset_color}"
echo -e "${underline_blue}test underline${reset_color}"
echo -e "${On_Blue}test background${reset_color}"
echo -e "${IBlue}test high intensity${reset_color}"
echo -e "${BIBlue}test bold high intensity${reset_color}"
echo -e "${On_IBlue}test high intensity background${reset_color}"

# See the extended 256 colors.

e

color(){
    for c; do
        printf '\e[48;5;%dm%03d' $c $c
    done
    printf '\e[0m \n'
}

IFS=$' \t\n'
color {0..15}
for ((i=0;i<6;i++)); do
    color $(seq $((i*36+16)) $((i*36+51)))
done
color {232..255}

# Print the ANSI test.
print_ansi_test()
{
    for a in 0 1 4 5 7; do
        echo "a=$a "
        for (( f=0; f<=9; f++ )) ; do
            for (( b=0; b<=9; b++ )) ; do
                #echo -ne "f=$f b=$b"
                echo -ne "\\033[${a};3${f};4${b}m"
                echo -ne "\\\\\\\\033[${a};3${f};4${b}m"
                echo -ne "\\033[0m "
            done
            echo
        done
        echo
    done
    echo
}

# XXX Make output more compact as in
# http://www.lihaoyi.com/post/BuildyourownCommandLinewithANSIescapecodes.html

# Print the colors with their color codes.
print_extended_colors() {
    for i in {0..255}; do
        printf "\033[48;5;%dm\033[38;5;15m %03d " $i $i
        printf "\033[33;5;0m\033[38;5;%dm %03d " $i $i
        (( i+1 <= 16 ? (i+1) % 8 :  ((i+1)-16) % 6  )) || printf "\033[0m\n"
        (( i+1 <= 16 ? (i+1) % 16 : ((i+1)-16) % 36 )) || printf "\033[0m\n"
    done
}

# Print the foreground and background colors with their attributes.
print_color_attributes() {
    for b in {0..7} 9; do
        for f in {0..7} 9; do
            for attr in "" bold; do
                echo -e -n "$(tput setab $b; tput setaf $f; [[ -n "$attr" ]] && tput $attr) $f ON $b $attr. $(tput sgr0)"
            done
            echo ""
        done
    done
}

print_ansi_test
print_extended_colors
print_color_attributes
