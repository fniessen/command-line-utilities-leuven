#!/usr/bin/env bash

#? find-common-lines, Time-stamp: <2024-05-21 Tue 13:55>
#? Copyright (C) 2024 Fabrice Niessen. All rights reserved.
#?
#? License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
#? This is free software: you are free to change and redistribute it.
#? There is NO WARRANTY, to the extent permitted by law.

##? Usage: find-common-lines [options] FILE1 FILE2
##?
##? Find common lines between two files.
##?
##? Arguments:
##?   FILE1                         Path to the first file.
##?   FILE2                         Path to the second file.
##?
##? Options:
##?   -h, --help                    Display this help and exit.
##?   -V, --version                 Show version.

# Set -uo pipefail for undefined variable check and pipeline failure propagation.
set -uo pipefail

# Check if docopts command is available.
if ! command -v docopts > /dev/null 2>&1; then
    printf >&2 'Error: docopts command not found.\n'
    exit 2
fi

# Extract help and version information from the script.
help=$(grep "^##?" "$0" | cut -c 5-)
version=$(grep "^#?" "$0" | cut -c 4-)

# Get command-line arguments.
args="$(docopts -h "$help" -V "$version" : "$@")"
eval "$args"

# Set -e to exit on non-zero command status.
set -e

# Function to remove temporary files.
cleanup() {
    rm -f "$temp_file1" "$temp_file2"
}

# Register cleanup function to be called on script interrupt.
trap cleanup INT

# Check if files exist.
if [ ! -f "$FILE1" ] || [ ! -f "$FILE2" ]; then
    printf >&2 "Error: Both files must exist.\n"
    exit 2
fi

# Check if dos2unix is available.
if ! command -v dos2unix &>/dev/null; then
    printf >&2 "Error: dos2unix is not installed or not found in PATH.\n"
    exit 2
fi

# Create temporary copies of the files.
temp_file1=$(mktemp)
temp_file2=$(mktemp)

# Copy the content of the original files to the temporary files.
cp "$FILE1" "$temp_file1"
cp "$FILE2" "$temp_file2"

# Convert temporary files to Unix format.
dos2unix "$temp_file1" "$temp_file2" >/dev/null 2>&1

# Sort both temporary files and use `comm` to find common lines.
common_lines=$(comm -12 <(sort "$temp_file1") <(sort "$temp_file2"))

if [ -z "$common_lines" ]; then
    printf "No common lines found.\n"
else
    printf >&2 "Common lines:\n"
    printf "%s\n" "$common_lines"
fi

# Explicitly call cleanup at script exit.
cleanup

exit 0
