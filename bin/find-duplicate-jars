#!/usr/bin/env bash

#? find-duplicate-jars, Time-stamp: <2023-03-06 Mon 10:31>
#? Copyright (C) 2020-2023 Fabrice Niessen. All rights reserved.
#?
#? License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
#? This is free software: you are free to change and redistribute it.
#? There is NO WARRANTY, to the extent permitted by law.

##? Usage: find-duplicate-jars [options] [PATTERN]
##?
##? Find and delete duplicate jar files, keeping only the most recent version.
##?
##? Options:
##?   -h, --help                    display this help and exit
##?   -V, --version                 display version information and exit

# Check if docopts command is available.
command -v docopts > /dev/null 2>&1 || { printf >&2 'Error: docopts command not found.\n'; exit 2; }

help=$(grep "^##?" "$0" | cut -c 5-)
version=$(grep "^#?"  "$0" | cut -c 4-)
parsed="$(docopts -h "$help" -V "$version" : "$@")"
eval "$parsed"

# Specify the path to the directory containing the jar files.
path="WEB-INF/lib"
path=${path%/}

# Find all the jar files in the directory.
find "$path" -type f -name "*.jar" -print0 |
    while IFS= read -r -d '' jar_file; do
        # Extract the base name and the version number from the jar file name.
        base_name=$(basename "$jar_file" .jar)
        version=$(echo "$base_name" | sed 's/.*-\([0-9]\)/\1/')
        key=$(echo "$base_name" | sed "s/-${version}//")

        # Find all the jar files with the same base name.
        versions=$(find "$path" -type f -name "$key*.jar")

        # Sort the jar files by version number in reverse order.
        sorted_versions=$(echo "$versions" | sort -r -t- -k2,2)

        # Keep only the most recent jar file.
        to_delete=$(echo "$sorted_versions" | tail -n +2)

        # Show duplicates.
        while IFS= read -r old_version; do
            echo "Found duplicate jar file: $old_version"
            echo "The most recent version is: $(echo "$sorted_versions" | head -n 1)"
        done <<< "$to_delete"
    done
