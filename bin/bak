#!/usr/bin/env bash

# Set up variables.
SCRIPT_NAME="$(basename "$0")"
AUTHOR="Fabrice Niessen"
COPYRIGHT_YEAR="2020-2023"
LICENSE="GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>"

# Define usage message.
USAGE="
Usage: $SCRIPT_NAME [options] FILE

Create a quick back-up copy of a file.

Arguments:
  FILE                          file to copy

Options:
  -r, --rename                  rename the original file instead of making a copy
  -h, --help                    display this help and exit
  -V, --version                 display version information and exit
"

# Define help and version messages.
HELP_MESSAGE="
$USAGE
$AUTHOR <$COPYRIGHT_YEAR>
License: $LICENSE
"

VERSION_MESSAGE="
$SCRIPT_NAME 1.0
$AUTHOR <$COPYRIGHT_YEAR>
License: $LICENSE
"

# Define function to check if a file exists and prompt the user to confirm overwrite.
confirm_overwrite() {
    local file="$1"
    if [ -e "$file" ]; then
        read -p "The file $file already exists. Do you want to overwrite it? (y/N) " confirm
        if [[ "$confirm" =~ ^[yY]$ ]]; then
            return 0
        else
            echo "Operation cancelled."
            return 1
        fi
    else
        return 0
    fi
}

# Check if docopts command is available.
if ! command -v docopts > /dev/null 2>&1; then
    printf "Error: docopts command not found.\n" >&2
    exit 2
fi

# Parse arguments.
parsed="$(docopts -h "$HELP_MESSAGE" -V "$VERSION_MESSAGE" : "$@")"
eval "$parsed"

# Extract the file extension and basename.
basename=$(basename -- "$FILE")
extension="${basename##*.}"
basename="${basename%.*}"

# Define the backup file name.
new_file="$basename.bak.$extension"

# XXX Check that file does exist

# Copy or rename the file depending on the options used.
if [[ "$rename" == "true" ]]; then
    if confirm_overwrite "$new_file"; then
        mv "$FILE" "$new_file"
        echo "File renamed from $FILE to $new_file."
    fi
else
    if confirm_overwrite "$new_file"; then
        cp "$FILE" "$new_file"
        echo "File copied from $FILE to $new_file."
    fi
fi
