#!/usr/bin/env bash

#? bak, Time-stamp: <2023-02-26 Sun 22:25>
#? Copyright (C) 2020-2023 Fabrice Niessen
#?
#? License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
#? This is free software: you are free to change and redistribute it.
#? There is NO WARRANTY, to the extent permitted by law.

##? Usage: bak [options] FILE
##?
##? Create a quick back-up copy of a file.
##?
##? Arguments:
##?   FILE                          file to copy
##?
##? Options:
##?   -h, --help                    display this help and exit
##?   -V, --version                 display version information and exit
##?
##? Example:
##?   bak core/main.c

# Check if docopts command is available.
command -v docopts > /dev/null 2>&1 || { printf >&2 'Error: docopts command not found.\n'; exit 2; }

help=$(grep "^##?" "$0" | cut -c 5-)
version=$(grep "^#?"  "$0" | cut -c 4-)
parsed="$(docopts -h "$help" -V "$version" : "$@")"
eval "$parsed"

# Extract the file extension and basename.
BASENAME=$(basename -- "$FILE")
EXTENSION="${BASENAME##*.}"
BASENAME="${BASENAME%.*}"

# Define the backup file name.
NEWFILE="$BASENAME.bak.$EXTENSION"

# Check if the backup file already exists.
if [ -e "$NEWFILE" ]; then
    read -p "The backup file $NEWFILE already exists. Do you want to overwrite it? [y/N] " confirm
    if [[ "$confirm" =~ ^[yY]$ ]]; then
        # Copy the file and display a success message.
        cp "$FILE" "$NEWFILE" \
            && printf "File copied from %s to %s.\n" "$FILE" "$NEWFILE"
    else
        echo "Operation cancelled."
    fi
else
    # Copy the file and display a success message.
    cp "$FILE" "$NEWFILE" \
        && printf "File copied from %s to %s.\n" "$FILE" "$NEWFILE"
fi
