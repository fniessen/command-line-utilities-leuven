#!/usr/bin/env bash

#? fd, Time-stamp: <2025-08-02 Sat 11:51>
#? Copyright (C) 2020-2025 Fabrice Niessen. All rights reserved.
#?
#? License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
#? This is free software: you are free to change and redistribute it.
#? There is NO WARRANTY, to the extent permitted by law.

##? Usage: fd [options] [PATTERN]
##?
##? Find directories matching a string and print their full file name.
##?
##? NOTE:
##?   Permission denied errors are suppressed using '2> /dev/null'.
##?
##? Arguments:
##?   PATTERN                       Optional string
##?
##? Options:
##?   -h, --help                    Display this help and exit
##?   -V, --version                 Display version information and exit
##?
##? Examples:
##?   fd                            List all directories
##?   fd doc                        List directories matching doc in their name

# Set -uo pipefail for undefined variable check and pipeline failure propagation.
set -uo pipefail

# Check if 'docopts' command is available.
if ! command -v docopts > /dev/null 2>&1; then
    printf >&2 "Error: 'docopts' command not found.\n"
    exit 2
fi

# Extract help and version information from the script.
help=$(grep -E '^##\?' "$0" | cut -c 5-)
version=$(grep -E '^#\?' "$0" | cut -c 4-)

# Parse command-line arguments using docopts.
eval "$(docopts -h "$help" -V "$version" : "$@")" || exit $?

# Silence AI false positives: PATTERN is set dynamically by docopts.
PATTERN="${PATTERN:-}"

# Set -e to exit on non-zero command status.
set -e

# Color configuration.
readonly DIR_COLOR="1;34"               # Blue directory names.
readonly HIGHLIGHT_COLOR="1;37;44"      # White on blue.

# Escape special characters for safe use in shell commands (e.g., grep, find).
safe_pattern=$(printf '%q' "$PATTERN")

# Find and colorize matching directory names, suppressing permission denied
# errors.
# NOTE: Use 'stdbuf -oL' to enforce line-buffered output through the pipeline.
# This ensures results stream live.
stdbuf -oL find . -type d -iname "*$safe_pattern*" -printf '%P/\n' 2> /dev/null \
    | GREP_COLORS="sl=$DIR_COLOR:mt=$HIGHLIGHT_COLOR" grep -i "$safe_pattern" --color=always
