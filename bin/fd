#!/usr/bin/env bash

#? fd, Time-stamp: <2025-02-19 Wed 12:06>
#? Copyright (C) 2020-2025 Fabrice Niessen. All rights reserved.
#?
#? License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
#? This is free software: you are free to change and redistribute it.
#? There is NO WARRANTY, to the extent permitted by law.

##? Usage: fd [options] [PATTERN]
##?
##? Find directories matching a string and print their full file name.
##?
##? Note:
##?   Permission denied errors are suppressed using '2> /dev/null'.
##?
##? Arguments:
##?   PATTERN                       Optional string
##?
##? Options:
##?   -h, --help                    Display this help and exit
##?   -V, --version                 Display version information and exit
##?
##? Examples:
##?   fd                            List all directories
##?   fd doc                        List directories matching doc in their name

# Set -uo pipefail for undefined variable check and pipeline failure propagation.
set -uo pipefail

# Check if 'docopts' command is available.
if ! command -v docopts > /dev/null 2>&1; then
    printf >&2 "Error: 'docopts' command not found.\n"
    exit 2
fi

# Extract help and version information from the script.
help=$(grep "^##?" "$0" | cut -c 5-)
version=$(grep "^#?" "$0" | cut -c 4-)

# Parse command-line arguments using docopts.
args="$(docopts -h "$help" -V "$version" : "$@")"
eval "$args"

# Set -e to exit on non-zero command status.
set -e

# Set color codes for formatting.
readonly DIR_COLOR="1;34"               # Blue color for directory names.
readonly MATCH_COLOR="1;37;1;44"        # White text on blue background.

# Set PATTERN to an empty string if not provided.
PATTERN="${PATTERN:-}"

# Find and colorize matching directory names, suppressing permission denied
# errors.
stdbuf -oL find . -type d -iname "*$PATTERN*" -printf '%P/\n' 2> /dev/null \
    | GREP_COLORS="sl=$DIR_COLOR:mt=$MATCH_COLOR" grep -i "$PATTERN" --color=always

# Exit successfully.
exit 0
