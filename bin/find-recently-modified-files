#!/usr/bin/env bash

#? find-recently-modified-files, Time-stamp: <2023-02-04 Sat 16:11>
#? Copyright (C) 2023 Fabrice Niessen
#?
#? License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
#? This is free software: you are free to change and redistribute it.
#? There is NO WARRANTY, to the extent permitted by law.

##? Usage: find-recently-modified-files [options] [DIRECTORY]
##?
##? Find all files modified in the last 7 days (including today).
##?
##? Arguments:
##?   DIRECTORY                     starting directory
##?
##? Options:
##?   -e EXT, --extension=EXT       filter files by extension
##?   -h, --help                    display this help and exit
##?   -V, --version                 display version information and exit

# Check if docopts command is available.
command -v docopts > /dev/null 2>&1 || { printf >&2 'Error: docopts command not found.\n'; exit 2; }

help=$(grep "^##?" "$0" | cut -c 5-)
version=$(grep "^#?"  "$0" | cut -c 4-)
parsed="$(docopts -h "$help" -V "$version" : "$@")"
eval "$parsed"

DIRECTORY=${DIRECTORY:-.}

# Define a variable for the print format
PRINT_FORMAT="  %CY-%Cm-%Cd %Ca %CH:%CM - %P\n"

# Check if the extension variable is set.
if [ -n "$extension" ]; then
    # If the extension variable is set, use it to find files with the specific
    # extension.
    find "$DIRECTORY" -type f -name "*.$extension" -daystart -mtime -7 -printf "$PRINT_FORMAT"
else
    # If the extension variable is not set, find all files without specifying an
    # extension.
    find "$DIRECTORY" -type f -daystart -mtime -7 -printf "$PRINT_FORMAT"
fi
