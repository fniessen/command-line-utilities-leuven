#!/usr/bin/env bash

#? find-commands, Time-stamp: <2023-02-18 Sat 20:35>
#? Copyright (C) 2023 Fabrice Niessen. All rights reserved.
#?
#? License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
#? This is free software: you are free to change and redistribute it.
#? There is NO WARRANTY, to the extent permitted by law.

##? Usage: find-commands [options] [PATTERN]
##?
##? Find commands matching a string and print their full file name.
##?
##? Arguments:
##?   PATTERN                       optional string
##?
##? Options:
##?   -h, --help                    display this help and exit
##?   -V, --version                 display version information and exit

# Check if docopts command is available.
command -v docopts > /dev/null 2>&1 || { printf >&2 'Error: docopts command not found.\n'; exit 2; }

help=$(grep "^##?" "$0" | cut -c 5-)
version=$(grep "^#?"  "$0" | cut -c 4-)
parsed="$(docopts -h "$help" -V "$version" : "$@")"
eval "$parsed"

# Lowercase the pattern.
PATTERN=$(printf '%s' "$PATTERN" | tr '[:upper:]' '[:lower:]')

# Iterate over all directories in $PATH.
for dir in $(printf "%s\n" "${PATH//:/$'\n'}"); do
    # Check if directory exists and is readable.
    if [ -d "$dir" ] && [ -r "$dir" ]; then
        # Iterate over all files in directory.
        for file in "$dir"/*; do
            # Check if file is executable and not a directory.
            if [ -x "$file" ] && [ ! -d "$file" ]; then
                # Extract the filename from the path.
                filename=$(basename "$file")
                lowercase_filename=$(printf '%s\n' "$filename" | tr '[:upper:]' '[:lower:]')
                # Check if the filename matches the pattern.
                if [[ "$lowercase_filename" == *"$PATTERN"* ]]; then
                    # Exclude DLL files from the output using grep -v.
                    printf '%s\n' "$filename" | grep -v '\.dll$' | grep --color=always -i "$PATTERN"
                fi
            fi
        done
    fi
done
