#!/usr/bin/env bash

#? ff, Time-stamp: <2025-08-02 Sat 11:41>
#? Copyright (C) 2020-2025 Fabrice Niessen. All rights reserved.
#?
#? License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
#? This is free software: you are free to change and redistribute it.
#? There is NO WARRANTY, to the extent permitted by law.

##? Usage: ff [options] [PATTERN]
##?
##? Find files matching a string and print their full file name.
##?
##? NOTE:
##?   Permission denied errors are suppressed using '2> /dev/null'.
##?
##? Arguments:
##?   PATTERN                       optional string
##?
##? Options:
##?   -h, --help                    display this help and exit
##?   -V, --version                 display version information and exit
##?
##? Examples:
##?   ff                            list all files
##?   ff admin                      list files matching admin in their name

# Set -uo pipefail for undefined variable check and pipeline failure propagation.
set -uo pipefail

# Check if 'docopts' command is available.
if ! command -v docopts > /dev/null 2>&1; then
    printf >&2 "Error: 'docopts' command not found.\n"
    exit 2
fi

# Extract help and version information from the script.
help=$(grep -E '^##\?' "$0" | cut -c 5-)
version=$(grep -E '^#\?' "$0" | cut -c 4-)

# Parse command-line arguments using docopts.
eval "$(docopts -h "$help" -V "$version" : "$@")" || exit $?

# Silence AI false positives: PATTERN is set dynamically by docopts.
PATTERN="${PATTERN:-}"

# Set -e to exit on non-zero command status.
set -e

# Color configuration.
readonly DIR_COLOR="1;34"               # Blue directory names.
readonly HIGHLIGHT_COLOR="1;37;44"      # White on blue.

readonly GREP_COLOR_DIR="sl=${DIR_COLOR}:ms=0:mc=0:me=0"
readonly GREP_COLOR_RESET="sl=0:ms=0:mc=0:me=0"
readonly GREP_COLOR_HIGHLIGHT="sl=${DIR_COLOR}:ms=${HIGHLIGHT_COLOR}:se=0"

# Escape potentially dangerous characters for use in grep/find.
safe_pattern=$(printf '%s' "$PATTERN" | sed 's/[][\\.*^$(){}|+?]/\\&/g')

# Find and colorize matching filenames, hiding permission denied errors.
# NOTE: Use 'stdbuf -oL' to enforce line-buffered output through the pipeline.
# This ensures results stream live.
stdbuf -oL find . -type f -iname "*$safe_pattern*" -printf '%P\n' 2> /dev/null \
    | GREP_COLORS="$GREP_COLOR_DIR" \
                 stdbuf -oL grep --color=always '[^/]*$' \
    | GREP_COLORS="$GREP_COLOR_RESET" \
                 stdbuf -oL grep --color=always -iP "$safe_pattern(?=[^/]*$)" \
    | GREP_COLORS="$GREP_COLOR_HIGHLIGHT" \
                 grep -Fi "$safe_pattern" --color=always
