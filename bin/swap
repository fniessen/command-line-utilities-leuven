#!/usr/bin/env bash

#? swap, Time-stamp: <2024-02-06 Tue 09:00>
#? Copyright (C) 2020-2024 Fabrice Niessen
#?
#? License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
#? This is free software: you are free to change and redistribute it.
#? There is NO WARRANTY, to the extent permitted by law.

##? Usage: swap [options] FILE1 FILE2
##?
##? Swap the contents of two files.
##?
##? Arguments:
##?   FILE1                         file
##?   FILE2                         file
##?
##? Options:
##?   -h, --help                    display this help and exit
##?   -V, --version                 display version information and exit
##?
##? Examples:
##?   swap config config.bak        swap files config and config.bak

# Set -uo pipefail for undefined variable check and pipeline failure propagation.
set -uo pipefail

# Check if docopts command is available.
if ! command -v docopts > /dev/null 2>&1; then
    printf >&2 'Error: docopts command not found.\n'
    exit 2
fi

# Extract help and version information from the script.
help=$(grep "^##?" "$0" | cut -c 5-)
version=$(grep "^#?" "$0" | cut -c 4-)

# Get command-line arguments.
args="$(docopts -h "$help" -V "$version" : "$@")"
eval "$args"

# Set -e to exit on non-zero command status.
set -e

# Use a temporary file to perform the swap.
temporary_file=$(mktemp "${TMP:-/tmp}/swap.XXXXXXXXXX")

# Perform the file swap.
mv -f "$FILE1" "$temporary_file"
mv -f "$FILE2" "$FILE1"
mv -f "$temporary_file" "$FILE2"

# Print a message indicating the files have been swapped.
printf "Files swapped: %s <-> %s\n" "$FILE1" "$FILE2"

# Exit with a success code.
exit 0
