#!/usr/bin/env bash

#? diff-directories, Time-stamp: <2024-12-18 Wed 12:56>
#? Copyright (C) 2024 Fabrice Niessen. All rights reserved.
#?
#? License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
#? This is free software: you are free to change and redistribute it.
#? There is NO WARRANTY, to the extent permitted by law.

##? Usage: diff-directories [options] DIR1 DIR2
##?
##? Compare two directories recursively and display sorted differences.
##?
##? Arguments:
##?   PATTERN                       optional string
##?
##? Options:
##?   -h, --help                    display this help and exit
##?   -V, --version                 display version information and exit

# Enable strict mode for undefined variable check and pipeline failure
# propagation.
set -uo pipefail

# Check if 'docopts' command is available.
if ! command -v docopts > /dev/null 2>&1; then
    printf >&2 "Error: 'docopts' command not found.\n"
    exit 2
fi

# Extract help and version information from the script.
help=$(grep "^##?" "$0" | cut -c 5-)
version=$(grep "^#?" "$0" | cut -c 4-)

# Parse command-line arguments using docopts.
args="$(docopts -h "$help" -V "$version" : "$@")"
eval "$args"

# Exit on non-zero command status.
set -e

# Check if both directories exist.
if [[ ! -d "$DIR1" ]]; then
    printf >&2 "Error: Directory '%s' does not exist.\n" "$DIR1"
    exit 2
fi

if [[ ! -d "$DIR2" ]]; then
    printf >&2 "Error: Directory '%s' does not exist.\n" "$DIR2"
    exit 2
fi

# Allow non-zero exit codes for diff.
set +e

# Perform a recursive directory comparison, suppress errors, sort the output,
# and display it.
diff_output=$(diff -rq "$DIR1" "$DIR2" 2>/dev/null)
if [[ -n "$diff_output" ]]; then
    printf "%s\n" "$diff_output" | sort
else
    printf "No differences found between directories.\n"
fi

# Exit successfully.
exit 0
