#!/usr/bin/env bash

#? file-access-list-unaccessed-directories, Time-stamp: <2024-08-13 Tue 11:25>
#? Copyright (C) 2023-2024 Fabrice Niessen. All rights reserved.
#?
#? License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
#? This is free software: you are free to change and redistribute it.
#? There is NO WARRANTY, to the extent permitted by law.

##? Usage: file-access-list-unaccessed-directories [options] [LOG_FILE]
##?
##? Analyze a log file, extracts directories with accessed files, identifies all
##? directories in the log, and then generates a list of unaccessed directories.
##?
##? Arguments:
##?   LOG_FILE                      Path to the log file to be analyzed.
##?
##? Options:
##?   -h, --help                    Display this help and exit.
##?   -V, --version                 Show version.

# Set -uo pipefail for undefined variable check and pipeline failure propagation.
set -uo pipefail

# Check if 'docopts' command is available.
if ! command -v docopts > /dev/null 2>&1; then
    printf >&2 "Error: 'docopts' command not found.\n"
    exit 2
fi

# Extract help and version information from the script.
help=$(grep "^##?" "$0" | cut -c 5-)
version=$(grep "^#?" "$0" | cut -c 4-)

# Get command-line arguments.
args="$(docopts -h "$help" -V "$version" : "$@")"
eval "$args"

# Set -e to exit on non-zero command status.
set -e

# Set a default log file if no argument is provided.
LOG_FILE="${LOG_FILE:-file_access_log.txt}"

# Extract a list of directories with accessed files.
accessed_dirs=$(awk '/ ACCESS / { sub(/[^/]*$/, ""); print; }' "$LOG_FILE" | sort -u)

# Extract a list of all directories in the log file.
all_dirs=$(awk '{ sub(/[^/]*$/, ""); print; }' "$LOG_FILE" | sort -u)

# Create a list of unaccessed directories.
unaccessed_dirs="unaccessed_directories.txt"

for dir in $all_dirs; do
    if ! grep -q "$dir" <<< "$accessed_dirs"; then
        printf "%s\n" "$dir" >> "$unaccessed_dirs"
    fi
done

# Display the list of unaccessed directories.
cat "$unaccessed_dirs"
