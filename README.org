#+TITLE:     shell-extras-leuven
#+AUTHOR:    Fabrice Niessen
#+EMAIL:     (concat "fniessen" at-sign "pirilampo.org")
#+DESCRIPTION: Shell extra utilities
#+KEYWORDS:  shell, script, bash
#+OPTIONS:   num:nil

Shell extra utilities

* Requirements

To be able to use the following commands, ensure that the following package is
installed on your system.

- [[https://github.com/docopt/docopts][docopts]] (~docopt~ for shell -- make beautiful CLI with ease)

  (I choose for the "with grep" syntax to have the help and version messages
  parsed from script *comments*, while avoiding having to source =docopts.sh=.)

* Commands

** bak

Create a quick back-up copy of a file.

** cate

Print the contents of the current buffer in Emacs to the terminal.

See also: ~cde~ (shell function to 'cd' to the directory of the current buffer in
Emacs).

** f

Find directories or files matching a string and print their full file name.

** fd

Find directories matching a string and print their full file name.

** ff

Find files matching a string and print their full file name.

** find-duplicate-filenames

Find files with duplicate or conflicting names.

** find-duplicate-files

Search for duplicated files.

** find-recently-modified-files

Find all files modified in the last 7 days (including today).

** find-today-files

Find all files modified today in a specified directory or the current directory
(if none is specified), with the option to filter by file extension.

** uncolor

Strip color sequences from the input text.

** swap

Swap the contents of two files.

* Notes

Why write an entire bash script in functions?
https://unix.stackexchange.com/questions/313256/why-write-an-entire-bash-script-in-functions

** Coding style

- Beautiful Bash: Let's make reading and writing bash scripts fun again!
  https://fr.slideshare.net/a_z_e_t/inpresentation

- Let's make better scripts
  https://downloads.cisofy.com/files/public/presentation-lets-make-better-scripts.pdf

- http://wiki.bash-hackers.org/scripting/style

- https://github.com/azet/community_bash_style_guide

- https://google-styleguide.googlecode.com/svn/trunk/shell.xml

  ~variable_name~ (preferred, ~variableName~ accepted) \\
  ~function_name~ \\
  ~CONSTANT_NAME~

** Shell formatter + checker

- https://github.com/mvdan/sh
- https://google.github.io/styleguide/shell.xml
- https://www.shellcheck.net/ (online checker!)

http://www.skybert.net/emacs/bash-linting-in-emacs/
